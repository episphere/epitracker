{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;;;;;;;AAAuE;;;;;;;;;;;;;;;;;;;;ACAO;AACM;AACrB;AACD;AACrB;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iDAAM;AACxC;AACA,sBAAsB,iDAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,sFAAqB;AAC7D,0CAA0C,4FAAuB;AACjE,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uEAAW;AAC9B;AACA;AACA;AACA,mBAAmB,sEAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvE0E;AACtB;AACI;;;;;;;;;;;;;;;ACFjD;AACP;AACA,iHAAiH,GAAG;AACpH;AACA;AACA;;;;;;;;;;;;;;;;ACLmE;;;;;;;;;;;;;;;ACAnE,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzDuE;;;;;;;;;;;;;;;ACAhE;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1CA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0C;AAC1C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,GAAG;AACxD;AACA;AACA;AACA;AACA,mFAAmF,uCAAuC;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mFAAmF,qCAAqC;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA+B,2CAA2C;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,MAAM;AACjG;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;AC1OA,iBAAiB,SAAI,IAAI,SAAI;AAC7B,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AAC0C;AAC1C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kDAAS;AACtC;AACA;AACA,0DAA0D,iBAAiB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,gBAAgB;AAC9B,cAAc,oBAAoB;AAClC,cAAc,4BAA4B;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,4CAA4C;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4BAA4B;AAC1C,cAAc,wBAAwB;AACtC,cAAc,mBAAmB;AACjC,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wBAAwB;AACtC,cAAc,4BAA4B;AAC1C,cAAc,mBAAmB;AACjC,cAAc,wBAAwB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,iBAAiB,IAAI,mBAAmB;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,MAAM;AACnG;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;;;;;;;;;;;;;;ACjRO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7BA;AACA;AACA;AACA,+DAAe,IAAI,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHnB;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC,I;;;;;WCPD,8CAA8C,yD;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D,E;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kC;;;;;;;;;;;;;;;;;AClB4B;AAC5B;AACsD;;AAEvB;AACK;AACI;;;AAG+B;AACM;;AAE7E;;AAEA;;AAEA;AACA;AACA,uBAAuB,+DAAY;AACnC;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,QAAQ,kBAAkB;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uFAA6B;AAC7B;AACA,wBAAwB,iFAAuB;AAC/C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,IAAI,E","sources":["webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/extended-with-mega-menu/index.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/extended-with-mega-menu/nci-header.component.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/index.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/mega-menu/default-mega-menu-source.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/mega-menu/index.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/mobile-menu/default-mobile-menu-source.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/mobile-menu/index.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/utils/focus-trap.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/utils/mega-menu/mega-menu-nav.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/utils/mobile-menu/mobile-menu.js","webpack://epitracker/./node_modules/@nciocpl/ncids-js/lib/esm/components/nci-header/utils/search.js","webpack://epitracker/./src/_includes/_megamenu.html","webpack://epitracker/./src/style/index.scss?825e","webpack://epitracker/webpack/bootstrap","webpack://epitracker/webpack/runtime/define property getters","webpack://epitracker/webpack/runtime/global","webpack://epitracker/webpack/runtime/hasOwnProperty shorthand","webpack://epitracker/webpack/runtime/make namespace object","webpack://epitracker/webpack/runtime/publicPath","webpack://epitracker/./src/index.js"],"sourcesContent":["export { NCIExtendedHeaderWithMegaMenu } from './nci-header.component';\n","import { DefaultMegaMenuSource } from '../mega-menu/default-mega-menu-source';\nimport { DefaultMobileMenuSource } from '../mobile-menu/default-mobile-menu-source';\nimport { MegaMenuNav } from '../utils/mega-menu/mega-menu-nav';\nimport { MobileMenu } from '../utils/mobile-menu/mobile-menu';\nimport { Search } from '../utils/search';\nexport class NCIExtendedHeaderWithMegaMenu {\n    constructor(element, options) {\n        this.searchInputFocusHandler = (event) => this.handleSearchFocus(event);\n        this.searchInputBlurHandler = (event) => this.handleSearchBlur(event);\n        this.element = element;\n        this.options = options;\n        this.megaMenuNav = this.wireUpMegaMenu();\n        this.mobileMenu = this.wireUpMobileMenu();\n        const searchFormEl = this.element.querySelector('form.nci-header-search');\n        if (searchFormEl) {\n            this.searchForm = new Search(searchFormEl, this.searchInputFocusHandler, this.searchInputBlurHandler);\n        }\n        const valid = Search.isSearchFormValid();\n        if (valid) {\n            this.searchDiv = this.element.querySelector('.nci-header-nav__secondary');\n        }\n        const existingComponent = NCIExtendedHeaderWithMegaMenu._components.get(this.element);\n        if (existingComponent) {\n            existingComponent.unregister();\n        }\n        NCIExtendedHeaderWithMegaMenu._components.set(this.element, this);\n    }\n    static create(element, options) {\n        if (!(element instanceof HTMLElement)) {\n            throw 'Element is not an HTMLElement';\n        }\n        return this._components.get(element) || new this(element, options);\n    }\n    static autoInit() {\n        document.addEventListener('DOMContentLoaded', () => {\n            const headers = Array.from(document.getElementsByClassName('nci-header'));\n            headers.forEach((header) => {\n                this.create(header, {\n                    megaMenuSource: new DefaultMegaMenuSource(),\n                    mobileMenuSource: new DefaultMobileMenuSource(),\n                });\n            });\n        });\n    }\n    unregister() {\n        if (this.searchForm) {\n            this.searchForm.unregister();\n        }\n        this.megaMenuNav.unregister();\n        this.mobileMenu.unregister();\n        NCIExtendedHeaderWithMegaMenu._components.delete(this.element);\n    }\n    wireUpMegaMenu() {\n        const navigation = this.element.querySelector('.nci-header-nav__primary');\n        return new MegaMenuNav(navigation, this.options.megaMenuSource);\n    }\n    wireUpMobileMenu() {\n        const navigation = this.element;\n        return new MobileMenu(navigation, this.options.mobileMenuSource);\n    }\n    handleSearchFocus(event) {\n        event.preventDefault();\n        this.searchDiv.classList.add('search-focused');\n    }\n    handleSearchBlur(event) {\n        event.preventDefault();\n        setTimeout(() => {\n            this.searchDiv.classList.remove('search-focused');\n        }, 250);\n    }\n}\nNCIExtendedHeaderWithMegaMenu._components = new Map();\n","export { NCIExtendedHeaderWithMegaMenu } from './extended-with-mega-menu';\nexport { DefaultMegaMenuSource } from './mega-menu';\nexport { DefaultMobileMenuSource } from './mobile-menu';\n","export class DefaultMegaMenuSource {\n    getMegaMenuContent(id) {\n        console.warn(`Default Mega Menu Adapter does not support setting data-menu-id properties. Cannot fetch ${id}`);\n        return null;\n    }\n}\n","export { DefaultMegaMenuSource } from './default-mega-menu-source';\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class DefaultMobileMenuSource {\n    constructor() {\n        this.useUrlForNavigationId = true;\n        this.lang = document.documentElement.lang;\n        this.primaryNavItems = Array.from(document.querySelectorAll('.nci-header-nav__primary-item a'));\n        this.items = [\n            {\n                id: 0,\n                label: 'Error',\n                path: '/',\n                langcode: this.lang,\n                hasChildren: false,\n            },\n        ];\n    }\n    getInitialMenuId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return 0;\n        });\n    }\n    getNavigationLevel(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.createDefaultMobileMenu(id);\n        });\n    }\n    createDefaultMobileMenu(id) {\n        this.items = this.primaryNavItems.map((item, index) => {\n            const anchor = item;\n            const path = anchor.href;\n            const textContent = item.textContent;\n            return {\n                id: index,\n                label: textContent,\n                path: path,\n                langcode: this.lang,\n                hasChildren: false,\n            };\n        });\n        return {\n            id: id,\n            label: '',\n            path: '/',\n            langcode: this.lang,\n            hasChildren: true,\n            items: this.items,\n            parent: null,\n        };\n    }\n}\n","export { DefaultMobileMenuSource } from './default-mobile-menu-source';\n","export class FocusTrap {\n    constructor(element) {\n        this.focusableContent = [];\n        this.eventListener = (event) => this.checkTrap(event);\n        this.element = element;\n        this.focusableElements =\n            \"button, [href], input, select, textarea, [tabindex]:not([tabindex='-1'])\";\n    }\n    toggleTrap(state, context) {\n        if (state) {\n            this.findFocusableElements(context);\n            context.addEventListener('keydown', this.eventListener, true);\n        }\n        else {\n            context.removeEventListener('keydown', this.eventListener, true);\n        }\n    }\n    findFocusableElements(element) {\n        this.context = element;\n        this.focusableContent = Array.from(element.querySelectorAll(this.focusableElements));\n        this.firstFocusableElement = (element.querySelectorAll(this.focusableElements)[0]);\n        this.lastFocusableElement = (this.focusableContent[this.focusableContent.length - 1]);\n    }\n    checkTrap(event) {\n        const eventKey = event;\n        const isTabPressed = eventKey.key === 'Tab' || parseInt(eventKey.code, 10) === 9;\n        if (!isTabPressed) {\n            return;\n        }\n        if (eventKey.shiftKey) {\n            if (document.activeElement === this.firstFocusableElement) {\n                this.lastFocusableElement.focus();\n                eventKey.preventDefault();\n            }\n        }\n        else {\n            if (document.activeElement === this.lastFocusableElement) {\n                this.firstFocusableElement.focus();\n                eventKey.preventDefault();\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FocusTrap } from '../focus-trap';\nconst isNavBarMMItem = (item) => item.type === 'NavItemWithMM';\nconst isNavBarItemLink = (item) => item.type === 'NavItemLink';\nexport class MegaMenuNav {\n    constructor(primaryNavElement, adapter) {\n        this.activeButton = null;\n        this.activeMenu = null;\n        this.customEvents = {};\n        this.navItems = [];\n        this.loader = document.createElement('div');\n        this.loaderContainer = document.createElement('div');\n        this.offsetMenuClickListener = (event) => this.handleOffsetMenuClick(event);\n        this.offsetMenuKeyPressListener = (event) => this.handleOffsetKeypress(event);\n        this.element = primaryNavElement;\n        this.adapter = adapter;\n        this.focusTrap = new FocusTrap(this.element);\n        this.content = document.createElement('template');\n        this.loader.classList.add('nci-is-loading', 'hidden');\n        this.loaderContainer.classList.add('nci-megamenu', 'hidden');\n        this.loaderContainer.ariaLive = 'polite';\n        this.loaderContainer.ariaBusy = 'true';\n        this.loaderContainer.ariaAtomic = 'true';\n        this.loaderContainer.appendChild(this.loader);\n        this.initialize();\n    }\n    unregister() {\n        this.navItems.forEach((item) => {\n            this.unregisterMenuItem(item);\n        });\n        this.removeEventListeners();\n        this.loader.remove();\n        this.loaderContainer.remove();\n    }\n    unregisterMenuItem(item) {\n        if (isNavBarMMItem(item)) {\n            item.button.removeEventListener('click', item.buttonListener);\n            item.button.replaceWith(item.link);\n        }\n        else if (isNavBarItemLink(item)) {\n            item.link.removeEventListener('click', item.linkListener);\n        }\n    }\n    initialize() {\n        const listItems = this.element.querySelectorAll('.nci-header-nav__primary-link');\n        this.navItems = Array.from(listItems).map((item) => {\n            const button = this.createNavButton(item);\n            if (button === null) {\n                const linkListener = this.addLinkEventListeners(item);\n                return {\n                    type: 'NavItemLink',\n                    link: item,\n                    linkListener,\n                };\n            }\n            const buttonListener = this.addButtonEventListeners(button);\n            return {\n                type: 'NavItemWithMM',\n                link: item,\n                button,\n                buttonListener,\n            };\n        });\n        this.createCustomEvents();\n        this.addOffsetMenuListeners();\n    }\n    createNavButton(link) {\n        const id = link.dataset.menuId;\n        if (id == null) {\n            return null;\n        }\n        const button = document.createElement('button');\n        button.innerHTML = link.innerHTML;\n        button.classList.add('usa-button', 'nci-header-nav__primary-button');\n        button.setAttribute('aria-expanded', 'false');\n        if (link.classList.contains('usa-current')) {\n            button.classList.add('usa-current');\n        }\n        button.setAttribute('data-menu-id', id);\n        button.setAttribute('aria-controls', `menu-${id}`);\n        link.replaceWith(button);\n        return button;\n    }\n    addButtonEventListeners(button) {\n        const listener = (event) => __awaiter(this, void 0, void 0, function* () { return this.handleButtonClick(event); });\n        button.addEventListener('click', listener);\n        return listener;\n    }\n    handleButtonClick(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const button = event.target;\n            yield this.toggleMegaMenu(button);\n        });\n    }\n    addLinkEventListeners(link) {\n        const listener = (event) => __awaiter(this, void 0, void 0, function* () { return this.handleLinkClick(event); });\n        link.addEventListener('click', listener);\n        return listener;\n    }\n    handleLinkClick(event) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const link = event.currentTarget;\n            const label = ((_a = link.textContent) !== null && _a !== void 0 ? _a : '').trim();\n            this.element.dispatchEvent(this.customEvents['linkclick']({\n                label,\n                href: link.href,\n                link,\n            }));\n        });\n    }\n    handleOffsetMenuClick(event) {\n        if (this.activeButton && this.activeMenu) {\n            const withinBoundaries = event.composedPath().includes(this.element);\n            if (!withinBoundaries) {\n                this.collapseMegaMenu();\n            }\n        }\n    }\n    handleOffsetKeypress(event) {\n        if (this.activeButton && this.activeMenu) {\n            const isEscapePressed = event.key === 'Escape';\n            if (isEscapePressed) {\n                this.collapseMegaMenu();\n            }\n        }\n    }\n    toggleMegaMenu(button) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.activeButton === button) {\n                this.collapseMegaMenu();\n            }\n            else {\n                if (this.activeButton) {\n                    this.collapseMegaMenu();\n                }\n                yield this.expandMegaMenu(button);\n            }\n        });\n    }\n    collapseMegaMenu() {\n        if (this.activeButton && this.activeMenu) {\n            const collapseDetails = this.getDetailsForExpandCollapse(this.activeButton);\n            this.focusTrap.toggleTrap(false, this.activeButton);\n            this.activeButton.setAttribute('aria-expanded', 'false');\n            this.activeButton = null;\n            this.activeMenu.classList.add('hidden');\n            this.activeMenu.setAttribute('aria-hidden', 'true');\n            this.activeMenu.remove();\n            this.activeMenu = null;\n            this.element.dispatchEvent(this.customEvents['collapse'](collapseDetails));\n        }\n    }\n    expandMegaMenu(button) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.createMenu(button);\n            this.focusTrap.toggleTrap(true, button);\n            this.activeButton = button;\n            this.activeButton.setAttribute('aria-expanded', 'true');\n            const menuId = this.activeButton.getAttribute('aria-controls');\n            this.activeMenu = this.element.querySelector(`#${menuId}`);\n            if (this.activeMenu) {\n                this.activeMenu.classList.remove('hidden');\n                this.activeMenu.setAttribute('aria-hidden', 'false');\n                this.activeMenu.hidden = false;\n            }\n            this.element.dispatchEvent(this.customEvents['expand'](this.getDetailsForExpandCollapse(this.activeButton)));\n        });\n    }\n    getDetailsForExpandCollapse(button) {\n        var _a, _b;\n        const btnText = ((_a = button.textContent) !== null && _a !== void 0 ? _a : '').trim();\n        const id = (_b = button.dataset.menuId) !== null && _b !== void 0 ? _b : '';\n        return {\n            label: btnText,\n            id,\n            button,\n        };\n    }\n    createMenu(button) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            button.after(this.loaderContainer);\n            const timer = setTimeout(() => {\n                this.loader.classList.remove('hidden');\n                this.loaderContainer.classList.remove('hidden');\n            }, 1000);\n            const menuId = (_a = button.dataset.menuId) !== null && _a !== void 0 ? _a : '';\n            const results = yield this.adapter.getMegaMenuContent(menuId);\n            if (results) {\n                clearTimeout(timer);\n            }\n            const id = `menu-${menuId.toString().replace(/[^\\w\\s]/gi, '')}`;\n            this.content = results || document.createElement('div');\n            this.content.setAttribute('id', id);\n            this.content.classList.add('hidden');\n            this.content.ariaLive = 'polite';\n            this.content.ariaBusy = 'false';\n            this.content.ariaAtomic = 'true';\n            this.loader.classList.add('hidden');\n            this.loaderContainer.classList.add('hidden');\n            this.loaderContainer.replaceWith(this.content);\n            button.setAttribute('aria-controls', id);\n        });\n    }\n    addOffsetMenuListeners() {\n        document.addEventListener('click', this.offsetMenuClickListener, false);\n        document.addEventListener('keydown', this.offsetMenuKeyPressListener, false);\n    }\n    removeEventListeners() {\n        document.removeEventListener('click', this.handleOffsetMenuClick, false);\n        document.removeEventListener('keydown', this.handleOffsetKeypress, false);\n    }\n    createCustomEvents() {\n        const events = ['collapse', 'expand'];\n        [...events].forEach((event) => {\n            this.customEvents[event] = (detail) => new CustomEvent(`nci-header:mega-menu:${event}`, {\n                bubbles: true,\n                detail,\n            });\n        });\n        this.customEvents['linkclick'] = (detail) => new CustomEvent(`nci-header:primary-nav:linkclick`, {\n            bubbles: true,\n            detail,\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FocusTrap } from '../focus-trap';\nconst locale = {\n    close: {\n        en: 'Close Menu',\n        es: 'Cerrar menú',\n    },\n    nav: {\n        en: 'Primary navigation.',\n        es: 'Navegación primaria.',\n    },\n};\nexport class MobileMenu {\n    constructor(mobileNavElement, adapter) {\n        this.menuData = null;\n        this.sectionParent = null;\n        this.loader = this.createDom('div', [\n            'nci-is-loading',\n            'hidden',\n        ]);\n        this.resizeWidth = 1024;\n        this.customEvents = {};\n        this.linkClickListener = (e) => this.handleLinkClick(e);\n        this.menuOpenEventListener = (e) => this.handleOpenMenu(e);\n        this.windowResizeEventListener = (query) => {\n            if (query.matches) {\n                this.handleCloseMenu('Close');\n            }\n        };\n        this.menuCloseButtonEventListener = () => this.handleCloseMenu('Close');\n        this.menuCloseOverlayEventListener = () => this.handleCloseMenu('Overlay');\n        this.escapeKeyPressListener = (e) => __awaiter(this, void 0, void 0, function* () {\n            if (this.activeMenu) {\n                const isEscapePressed = e.key === 'Escape';\n                if (isEscapePressed) {\n                    yield this.closeMenu('Escape');\n                }\n            }\n        });\n        if (!adapter.getInitialMenuId) {\n            throw new Error('getInitialMenuId required to return a Promise of string or number.');\n        }\n        if (!adapter.getNavigationLevel) {\n            throw new Error('getNavigationLevel required to return a Promise of MobileMenuData.');\n        }\n        this.element = mobileNavElement;\n        this.adapter = adapter;\n        this.pageUrl = window.location.pathname;\n        this.focusTrap = new FocusTrap(this.element);\n        this.activeMenu = false;\n        this.mobileButton = (this.element.querySelector('.nci-header-mobilenav__open-btn'));\n        this.resizeMediaQuery = matchMedia(`(min-width: ${this.resizeWidth}px)`);\n        this.langCode = document.documentElement.lang;\n        this.initialize();\n    }\n    unregister() {\n        this.element.removeEventListener('click', this.linkClickListener);\n        this.mobileButton.removeEventListener('click', this.menuOpenEventListener, true);\n        this.mobileClose.removeEventListener('click', this.menuCloseButtonEventListener, true);\n        this.mobileOverlay.removeEventListener('click', this.menuCloseOverlayEventListener, true);\n        document.removeEventListener('keydown', this.escapeKeyPressListener, false);\n        this.resizeMediaQuery.removeEventListener('change', this.windowResizeEventListener);\n        this.mobileOverlay.remove();\n        this.mobileClose.remove();\n        this.mobileNav.remove();\n        this.loader.remove();\n    }\n    initialize() {\n        this.mobileNav = (this.createDom('div', ['nci-header-mobilenav'], [\n            { tabindex: -1 },\n            { role: 'dialog' },\n            { 'aria-modal': true },\n            { id: 'nci-header-mobilenav' },\n        ]));\n        this.mobileNav.ariaLive = 'polite';\n        this.mobileNav.ariaBusy = 'true';\n        this.mobileNav.removeAttribute('hidden');\n        this.mobileOverlay = (this.createDom('div', ['nci-header-mobilenav__overlay'], []));\n        const ariaLabel = locale['close'][this.langCode];\n        this.mobileClose = this.createDom('button', ['nci-header-mobilenav__close-btn'], [\n            {\n                'aria-controls': 'nci-header-mobilenav',\n            },\n            {\n                'aria-label': ariaLabel,\n            },\n        ]);\n        this.mobileClose.addEventListener('click', this.menuCloseButtonEventListener, true);\n        this.mobileOverlay.addEventListener('click', this.menuCloseOverlayEventListener, true);\n        this.mobileButton.addEventListener('click', this.menuOpenEventListener, true);\n        this.mobileNav.append(this.mobileClose);\n        this.mobileNav.append(this.loader);\n        this.element.append(this.mobileNav);\n        this.element.append(this.mobileOverlay);\n        document.addEventListener('keydown', this.escapeKeyPressListener, false);\n        this.resizeMediaQuery.addEventListener('change', this.windowResizeEventListener);\n        this.createCustomEvents();\n    }\n    handleOpenMenu(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const menuCheck = this.element.querySelector('.nci-header-mobilenav__list');\n            if (menuCheck)\n                menuCheck.remove();\n            this.mobileNav.ariaBusy = 'true';\n            this.loader.classList.remove('hidden');\n            const target = event.currentTarget;\n            const label = (target.textContent || '').trim();\n            yield this.openMenu(label);\n        });\n    }\n    handleCloseMenu(action) {\n        this.closeMenu(action);\n    }\n    openMenu(label) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.activeMenu = true;\n            this.mobileNav.removeAttribute('hidden');\n            this.mobileNav.classList.add('active');\n            this.mobileOverlay.classList.toggle('active');\n            const initialMenuId = yield this.adapter.getInitialMenuId();\n            this.menuData = yield this.adapter.getNavigationLevel(initialMenuId);\n            const menu = this.displayNavLevel(this.menuData);\n            const menuNav = this.createDom('nav', ['nci-header-mobilenav__nav'], [{ 'aria-label': locale['nav'][this.langCode] }]);\n            menuNav.appendChild(menu);\n            this.mobileNav.append(menuNav);\n            this.mobileClose.focus();\n            this.focusTrap.toggleTrap(true, this.mobileNav);\n            this.mobileNav.ariaBusy = 'false';\n            this.element.dispatchEvent(this.customEvents['open']({\n                label: label,\n                initialMenu: this.menuData,\n            }));\n        });\n    }\n    closeMenu(action) {\n        this.activeMenu = false;\n        this.mobileNav.setAttribute('hidden', 'hidden');\n        this.focusTrap.toggleTrap(false, this.mobileNav);\n        this.mobileNav.classList.remove('active');\n        this.mobileOverlay.classList.remove('active');\n        const lastMenu = this.menuData;\n        this.menuData = null;\n        this.element.dispatchEvent(this.customEvents['close']({\n            action: action,\n            lastMenu: lastMenu || null,\n        }));\n    }\n    handleLinkClick(event, action, index) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const menuCheck = this.element.querySelector('.nci-header-mobilenav__list');\n            if (menuCheck)\n                menuCheck.remove();\n            this.mobileNav.ariaBusy = 'true';\n            this.loader.classList.remove('hidden');\n            const link = event.target;\n            const dataMenuID = link.getAttribute('data-menu-id');\n            const target = event.currentTarget;\n            const label = (target.textContent || '').trim();\n            if (dataMenuID) {\n                this.menuData = yield this.adapter.getNavigationLevel(dataMenuID);\n                const menu = this.displayNavLevel(this.menuData);\n                this.mobileNav.append(menu);\n                this.focusTrap.toggleTrap(true, this.mobileNav);\n            }\n            this.element.dispatchEvent(this.customEvents['linkclick']({\n                action: action || null,\n                data: this.menuData,\n                label: label,\n                index: index || null,\n            }));\n        });\n    }\n    displayNavLevel(data) {\n        const items = data.items;\n        this.sectionParent = data.parent;\n        const menu = this.createDom('ul', ['nci-header-mobilenav__list']);\n        const childItems = items.map((item, index) => {\n            index = this.sectionParent ? index + 1 : index;\n            return item.hasChildren\n                ? this.makeMenuNode(item, index)\n                : this.makeMenuLink(item, index);\n        });\n        if (this.sectionParent) {\n            const menuList = this.createDom('ul', ['nci-header-mobilenav__list']);\n            const menuBack = this.makeBackNode(this.sectionParent);\n            menu.append(menuBack);\n            const menuHolder = this.createDom('li', [\n                'nci-header-mobilenav__list-holder',\n            ]);\n            menuHolder.append(menuList);\n            const exploreSection = this.makeMenuLink(data, 0);\n            menuList.append(exploreSection);\n            menu.append(menuHolder);\n            menuList.append(...childItems);\n        }\n        else {\n            menu.append(...childItems);\n        }\n        this.mobileNav.ariaBusy = 'false';\n        this.loader.classList.add('hidden');\n        return menu;\n    }\n    makeBackNode(item) {\n        const dataMenuID = this.adapter.useUrlForNavigationId ? item.path : item.id;\n        const listItem = this.createDom('li', ['nci-header-mobilenav__list-node', 'active'], []);\n        const linkLabel = this.createDom('button', ['nci-header-mobilenav__list-msg'], [\n            { 'data-menu-id': dataMenuID },\n            { 'data-href': item.path },\n            { 'data-options': 0 },\n            { 'data-isroot': 'false' },\n        ]);\n        linkLabel.innerHTML = item.label;\n        linkLabel.addEventListener('click', (this.linkClickListener = (event) => this.handleLinkClick(event, 'Back')), true);\n        listItem.append(linkLabel);\n        return listItem;\n    }\n    makeMenuNode(item, index) {\n        const dataMenuID = this.adapter.useUrlForNavigationId ? item.path : item.id;\n        const listItem = this.createDom('li', ['nci-header-mobilenav__list-node'], []);\n        const linkLabel = this.createDom('button', ['nci-header-mobilenav__list-label'], [\n            { 'data-href': item.path },\n            { 'data-menu-id': dataMenuID },\n            { 'data-options': 0 },\n            { 'data-isroot': 'false' },\n        ]);\n        linkLabel.innerHTML = item.label;\n        listItem.addEventListener('click', (this.linkClickListener = (event) => this.handleLinkClick(event, 'Child', index)), true);\n        listItem.append(linkLabel);\n        return listItem;\n    }\n    makeMenuLink(item, index) {\n        const listItem = this.createDom('li', ['nci-header-mobilenav__list-item'], []);\n        const linkItem = this.createDom('a', ['nci-header-mobilenav__list-link'], [{ href: item.path }, { 'data-options': 0 }]);\n        if (this.pageUrl === item.path)\n            linkItem.classList.add('current');\n        linkItem.innerHTML = item.label;\n        listItem.addEventListener('click', (this.linkClickListener = (event) => this.handleLinkClick(event, 'Child', index)), true);\n        listItem.append(linkItem);\n        return listItem;\n    }\n    createDom(dom, classes, options) {\n        const element = document.createElement(dom);\n        if (classes) {\n            [...classes].forEach((name) => {\n                element.classList.add(name);\n            });\n        }\n        if (options) {\n            [...options].forEach((opt) => {\n                const key = Object.keys(opt)[0];\n                const value = Object.values(opt)[0];\n                element.setAttribute(key, value);\n            });\n        }\n        return element;\n    }\n    createCustomEvents() {\n        const events = ['close', 'open', 'linkclick'];\n        [...events].forEach((event) => {\n            this.customEvents[event] = (detail) => new CustomEvent(`nci-header:mobile-menu:${event}`, {\n                bubbles: true,\n                detail,\n            });\n        });\n    }\n}\n","export class Search {\n    constructor(searchForm, searchInputFocusHandler, searchInputBlurHandler) {\n        this.searchForm = searchForm;\n        this.searchInputBlurHandler = searchInputBlurHandler;\n        this.searchInputFocusHandler = searchInputFocusHandler;\n        this.searchField = (this.searchForm.querySelector('#nci-header-search__field'));\n        if (this.searchField) {\n            this.initialize();\n        }\n    }\n    initialize() {\n        this.searchField.addEventListener('focus', this.searchInputFocusHandler, false);\n        this.searchField.addEventListener('focusout', this.searchInputBlurHandler, false);\n    }\n    static isSearchFormValid() {\n        const searchForm = document.querySelector('form.nci-header-search');\n        const searchInput = document.querySelector('#nci-header-search__field');\n        const searchButton = document.querySelector('button.nci-header-search__search-button');\n        if (searchForm && searchInput && searchButton) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    unregister() {\n        this.searchField.removeEventListener('focus', this.searchInputFocusHandler, false);\n        this.searchField.removeEventListener('focusout', this.searchInputBlurHandler, false);\n    }\n}\n","// Module\nvar code = \"<div id=\\\"megamenu-layer\\\" class=\\\"nci-megamenu\\\" aria-live=\\\"polite\\\" aria-busy=\\\"false\\\" aria-atomic=\\\"true\\\"\\n  aria-hidden=\\\"false\\\">\\n  <div class=\\\"grid-container\\\">\\n    <div class=\\\"grid-row grid-gap-1\\\">\\n      <!-- <div class=\\\"grid-col-3 nci-megamenu__primary-pane\\\"><a class=\\\"nci-megamenu__primary-link\\\" href=\\\"/tools\\\">Explore\\n          Tools and Resources</a></div> -->\\n      <div class=\\\"nci-megamenu__items-pane grid-col-9\\\">\\n        <div class=\\\"grid-row grid-gap\\\">\\n          <div class=\\\"grid-col-4\\\">\\n            <ul class=\\\"nci-megamenu__list\\\">\\n              <li class=\\\"nci-megamenu__list-item\\\"><a class=\\\"nci-megamenu__list-item-link\\\"\\n                  href=\\\"/tools/exposure-assessment-tools\\\">Cancer Mapping Tool</a></li>\\n            </ul>\\n          </div>\\n          <div class=\\\"grid-col-4\\\">\\n            <ul class=\\\"nci-megamenu__list\\\">\\n              <li class=\\\"nci-megamenu__list-item\\\"><a class=\\\"nci-megamenu__list-item-link\\\"\\n                  href=\\\"/tools/radiation-dosimetry-tools\\\">County Characteristics Tool</a></li>\\n            </ul>\\n          </div>\\n          <div class=\\\"grid-col-4\\\">\\n            <ul class=\\\"nci-megamenu__list\\\">\\n              <li class=\\\"nci-megamenu__list-item\\\"><a class=\\\"nci-megamenu__list-item-link\\\"\\n                  href=\\\"/tools/analysis\\\">Demographics Tool</a></li>\\n            </ul>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";\n// Exports\nexport default code;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import './style/index.scss'; \n// import '@nciocpl/ncids-js/nci-header/extended-with-mega-menu/auto-init';\nimport megaMenuHTML from './_includes/_megamenu.html';\n\nimport './images/card_map.png'; \nimport './images/card_quantile.png'; \nimport './images/card_demographics.png'; \n\n\nimport { DefaultMobileMenuSource } from '@nciocpl/ncids-js/nci-header';\nimport { NCIExtendedHeaderWithMegaMenu } from '@nciocpl/ncids-js/nci-header';\n\n// import '@nciocpl/ncids-js/usa-combo-box/auto-init'\n\n// const megaMenuContent = document.querySelector(\"#megamenu-layer\");\n\nfunction getTemplateElements() {\n  const template = document.createElement(\"template\");\n  template.innerHTML = megaMenuHTML;\n  const megaMenuElement = template.content.firstElementChild;\n  return { megaMenuElement };\n}\n\n// const parser = new DOMParser();\n// const megaMenuContent =  parser.parseFromString(megaMenuHTML, \"text/html\");\n// const template = document.createElement(\"\")\n// console.log(megaMenuContent)\nconst { megaMenuElement } = getTemplateElements();\n\nclass MegaMenuSource {\n  async getMegaMenuContent(id) {\n    console.log(megaMenuElement)\n    return megaMenuElement\n  }\n}\n\n// Find the header HTML element.\nconst header = document.querySelector('#header-with-mega-menu');\n\nNCIExtendedHeaderWithMegaMenu.create(header, {\n  megaMenuSource: new MegaMenuSource(),\n  mobileMenuSource: new DefaultMobileMenuSource(),\n});\n\n// fetch(\"./_megamenu.html\").then(file => file.text()).then(megaMenuHTML => {\n//   console.log(\"H\", megaMenuHTML)\n//   const parser = new DOMParser();\n//   const content = parser.parseFromString(megaMenuHTML, \"text/html\");\n//   console.log(content)\n// }) "],"names":[],"sourceRoot":""}